/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttributeGroup } from "../../attributeGroup/base/AttributeGroup";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { ItemAttribute } from "../../itemAttribute/base/ItemAttribute";
import { EnumAttributeTypeField } from "./EnumAttributeTypeField";

@ObjectType()
class Attribute {
  @ApiProperty({
    required: false,
    type: () => [AttributeGroup],
  })
  @ValidateNested()
  @Type(() => AttributeGroup)
  @IsOptional()
  AttributeGroups?: Array<AttributeGroup>;

  @ApiProperty({
    required: false,
    type: () => [ItemAttribute],
  })
  @ValidateNested()
  @Type(() => ItemAttribute)
  @IsOptional()
  ItemAttributes?: Array<ItemAttribute>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  key!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  label!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumAttributeTypeField,
  })
  @IsEnum(EnumAttributeTypeField)
  @Field(() => EnumAttributeTypeField, {
    nullable: true,
  })
  typeField?: "Text" | "Dropdown";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Attribute as Attribute };
